name: core

env:
  FORCE_COLOR: "1"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  run-pre-commit:

    name: run-pre-commit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox uv
    - uses: pre-commit/action@v3.0.1

  run-formatting-check:

    name: run-formatting-check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox uv
    - name: Run nox
      run: |
        nox -s formatting_check

  run-linting-check:

    name: run-linting-check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox uv
    - name: Run nox
      run: |
        nox -s linting_check -- --output-format=github

  run-type-checking:

    name: run-type-checking
    runs-on: ubuntu-latest

    needs:
      - run-pre-commit
      - run-formatting-check
      - run-linting-check

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox uv
    - name: Run nox
      run: |
        nox -s typing_check

  run-tests-pinned:

    name: run-tests-pinned
    runs-on: ubuntu-latest

    needs:
      - run-type-checking

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox uv
    - name: Run nox
      run: |
        nox -s tests_run


  packaging:

    name: packaging
    uses: ./.github/workflows/deploy-package.yaml

    # only start build if core pipeline was successful
    needs: run-tests-pinned
